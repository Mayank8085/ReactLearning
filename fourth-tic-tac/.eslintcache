[{"D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\index.js":"1","D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\App.js":"2","D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\components\\Icon.js":"3"},{"size":160,"mtime":1611828938000,"results":"4","hashOfConfig":"5"},{"size":3339,"mtime":1612101524000,"results":"6","hashOfConfig":"5"},{"size":452,"mtime":1611908784000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"uyx1xe",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\index.js",[],["16","17"],"D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\App.js",["18","19"],"import React, {useState} from \"react\";\nimport Icon from \"./components/Icon\"\n\n//toastify\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Card,CardBody, Container,Button,Col, Row} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\n\nconst itemArray= new Array(9).fill(\"empty\")\n\n\n\nconst App=()=> {\n\n  const [isCross, setIsCross] = useState(false);\nconst [draw, setDraw] = useState(0)\n  const [winMessage, setWinMessage] = useState(\"\");\n  const reloadGame=()=>{\n    setIsCross(false)\n    setWinMessage(\"\")\n    itemArray.fill(\"empty\",0,9)\n\n  }\n\n  const checkIsWinner=()=>{\n    if (itemArray[0]===itemArray[1]&&itemArray[0]===itemArray[2]&&itemArray[0] !==\"empty\") {\n      setWinMessage(`${itemArray[0]} wins`)\n      \n    } else if(itemArray[3]===itemArray[4]&&itemArray[3]===itemArray[5]&&itemArray[3] !==\"empty\") {\n      setWinMessage(`${itemArray[3]} wins`)\n      \n    } else if(itemArray[6]===itemArray[7]&&itemArray[6]===itemArray[8]&&itemArray[6] !==\"empty\") {\n      setWinMessage(`${itemArray[6]} wins`)\n\n    } else if(itemArray[0]===itemArray[3]&&itemArray[0]===itemArray[6]&&itemArray[0] !==\"empty\") {\n      setWinMessage(`${itemArray[0]} wins`)\n\n    } else if(itemArray[1]===itemArray[4]&&itemArray[1]===itemArray[7]&&itemArray[1] !==\"empty\") {\n      setWinMessage(`${itemArray[1]} wins`)\n\n    } else if(itemArray[2]===itemArray[5]&&itemArray[2]===itemArray[8]&&itemArray[2] !==\"empty\") {\n      setWinMessage(`${itemArray[2]} wins`)\n\n    } else if(itemArray[0]===itemArray[4]&&itemArray[0]===itemArray[8]&&itemArray[0] !==\"empty\") {\n      setWinMessage(`${itemArray[0]} wins`)\n\n    } else if(itemArray[2]===itemArray[4]&&itemArray[2]===itemArray[6]&&itemArray[2] !==\"empty\") {\n      setWinMessage(`${itemArray[2]} wins`)\n      \n\n    }\n    \n    \n  }\n\n  const changeItem=(itemNumber)=>{\n    if(winMessage){\n      return toast(winMessage,{type:\"success\"});\n    }\n    if (itemArray[itemNumber]===\"empty\") {\n      itemArray[itemNumber]= isCross ? \"cross\":\"circle\"\n      setIsCross(!isCross)\n\n      \n    } else {\n      return toast(\"already filled\", {type:\"error\"})\n      \n    }\n    checkIsWinner();\n    // checkIsTye();\n  \n  }\n\n//  const checkIsTye=()=>{\n//    for (let index = 0; index < itemArray.length; index++) {\n//     if(itemArray[index] !==\"empty\"){\n//       setDraw(draw+1)\n//       console.log(itemArray[index]);\n//    }\n//    if (draw===8) {\n//      setWinMessage(\"match tye\")\n//    }\n \n//  }}\n\n  return (\n    <Container className=\"p-5\">\n    <ToastContainer position=\"bottom-center\"/>\n    <Row>\n    <Col md={6} className=\"offset-md-3\">\n    {winMessage ?(\n      <div className=\"mb-2 mt-2\">\n        <h1 className=\"text-white text-uppercase text-center\"> {winMessage}</h1>\n        <Button color=\"success\"\n        block\n        onClick={reloadGame}\n        \n        > RELOAD GAME</Button>\n      </div>\n    ):(\n      <h1 className=\"text-warning text-center\">\n      {isCross?\"Cross\" :\"Circle\"} Turn\n      </h1>\n    )}\n    <div className=\"grid\">\n    {itemArray.map((item,index)=>(\n      <Card  onClick={()=> changeItem(index)}>\n      <CardBody className=\"box\"  >\n      <Icon name={item} />\n      </CardBody>\n      </Card>\n    ))}\n    </div>\n    \n    </Col>\n    </Row>\n   \n    </Container>\n\n                     \n  );\n}\n\nexport default App;\n","D:\\Important\\HiteshChoudharyReact\\fourth-tic-tac\\src\\components\\Icon.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":20,"column":8,"nodeType":"26","messageId":"27","endLine":20,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":20,"column":14,"nodeType":"26","messageId":"27","endLine":20,"endColumn":21},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'draw' is assigned a value but never used.","Identifier","unusedVar","'setDraw' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]